--- pmd/src/net/sourceforge/pmd/typeresolution/PMDASMClassLoader.java.orig	2007-07-25 09:36:26.000000000 +0200
+++ pmd/src/net/sourceforge/pmd/typeresolution/PMDASMClassLoader.java	2007-07-25 09:36:42.000000000 +0200
@@ -36,14 +36,14 @@
         try {
             ClassReader reader = new ClassReader(getResourceAsStream(name.replace('.', '/') + ".class"));
             PMDASMVisitor asmVisitor = new PMDASMVisitor();
-            reader.accept(asmVisitor, 0);
+            reader.accept(asmVisitor, false);
 
             List<String> inner = asmVisitor.getInnerClasses();
             if (inner != null && !inner.isEmpty()) {
                 inner = new LinkedList<String>(inner); // to avoid ConcurrentModificationException
                 for (String str: inner) {
                     reader = new ClassReader(getResourceAsStream(str.replace('.', '/') + ".class"));
-                    reader.accept(asmVisitor, 0);
+                    reader.accept(asmVisitor, false);
                 }
             }
             return asmVisitor.getPackages();
@@ -52,4 +52,4 @@
             throw new ClassNotFoundException(name);
         }
     }
-}
\ No newline at end of file
+}
--- pmd-4.2.1/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java.orig	2008-03-24 04:40:43.000000000 +0100
+++ pmd-4.2.1/src/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java	2008-04-20 23:52:43.000000000 +0200
@@ -52,7 +52,7 @@
 					InputStream inputStream = this.getClass().getClassLoader().getResourceAsStream(
 							classResourceName + ".class");
 					ClassReader classReader = new ClassReader(inputStream);
-					classReader.accept(getNewClassVisitor(), 0);
+					classReader.accept(getNewClassVisitor(), false);
 				}
 			}
 		} catch (IOException e) {
